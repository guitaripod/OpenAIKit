{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodingFailed"},{"kind":"text","text":"(any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The underlying decoding error","type":"text"}]}],"name":"error"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This error wraps the underlying decoding error and typically occurs when:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"The API returns a different JSON structure than expected","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Required fields are missing from the response","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Data types donâ€™t match (e.g., string instead of number)"}]}]}],"type":"unorderedList"},{"anchor":"Debugging","level":2,"text":"Debugging","type":"heading"},{"syntax":"swift","type":"codeListing","code":["do {","    let response = try await openAI.completions.create(...)","} catch OpenAIError.decodingFailed(let error) {","    if let decodingError = error as? DecodingError {","        switch decodingError {","        case .keyNotFound(let key, let context):","            print(\"Missing key: \\(key.stringValue)\")","        case .typeMismatch(let type, let context):","            print(\"Type mismatch for type: \\(type)\")","        default:","            print(\"Decoding error: \\(context.debugDescription)\")","        }","    }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/openaierror\/decodingfailed(_:)"]}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/decodingFailed(_:)"},"abstract":[{"type":"text","text":"Failed to decode the response data into the expected type."}],"seeAlsoSections":[{"identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/encodingFailed(_:)","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/invalidFileData"],"generated":true,"title":"Data Processing Errors","anchor":"Data-Processing-Errors"}],"metadata":{"externalID":"s:9OpenAIKit0A7AIErrorO14decodingFailedyACs5Error_pcACmF","symbolKind":"case","modules":[{"name":"OpenAIKit"}],"roleHeading":"Case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodingFailed","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"OpenAIError.decodingFailed(_:)"},"references":{"doc://OpenAIKit/documentation/OpenAIKit/OpenAIError":{"abstract":[{"text":"The primary error type for all OpenAI API interactions.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpenAIError"}],"role":"symbol","title":"OpenAIError","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError","kind":"symbol","url":"\/documentation\/openaikit\/openaierror","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpenAIError"}]},"doc://OpenAIKit/documentation/OpenAIKit/OpenAIError/invalidFileData":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"invalidFileData","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The provided file data is invalid or corrupted."}],"title":"OpenAIError.invalidFileData","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/invalidFileData","url":"\/documentation\/openaikit\/openaierror\/invalidfiledata","kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/OpenAIError/encodingFailed(_:)":{"abstract":[{"type":"text","text":"Failed to encode the request data into the required format."}],"role":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/encodingFailed(_:)","title":"OpenAIError.encodingFailed(_:)","kind":"symbol","url":"\/documentation\/openaikit\/openaierror\/encodingfailed(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodingFailed","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/OpenAIError/decodingFailed(_:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodingFailed"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Failed to decode the response data into the expected type.","type":"text"}],"title":"OpenAIError.decodingFailed(_:)","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/OpenAIError\/decodingFailed(_:)","url":"\/documentation\/openaikit\/openaierror\/decodingfailed(_:)","kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit":{"abstract":[{"type":"text","text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms."}],"type":"topic","role":"collection","title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","kind":"symbol","url":"\/documentation\/openaikit"}}}