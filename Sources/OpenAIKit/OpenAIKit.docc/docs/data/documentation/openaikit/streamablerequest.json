{"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Request","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","preciseIdentifier":"s:9OpenAIKit7RequestP","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"StreamableRequest"},{"text":" extends the base ","type":"text"},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","isActive":true},{"text":" protocol to support streaming responses","type":"text"},{"text":" ","type":"text"},{"text":"from the OpenAI API. This is particularly useful for real-time applications where you want","type":"text"},{"text":" ","type":"text"},{"text":"to process responses as they arrive rather than waiting for the complete response.","type":"text"}]},{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Streaming is supported by various OpenAI endpoints including:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Chat completions (for real-time chat responses)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Completions (for real-time text generation)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Assistants API (for real-time message streaming)","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"The streaming response is typically a modified version of the regular response,","type":"text"},{"text":" ","type":"text"},{"text":"often containing delta objects instead of complete content.","type":"text"}]},{"anchor":"Example-Implementation","text":"Example Implementation","type":"heading","level":2},{"type":"codeListing","code":["struct StreamableChatRequest: StreamableRequest {","    typealias Body = ChatRequestBody","    typealias Response = ChatCompletionResponse","    typealias StreamResponse = ChatCompletionChunk","    ","    let path = \"\/v1\/chat\/completions\"","    let body: ChatRequestBody?","    ","    init(messages: [ChatMessage], model: String, stream: Bool = true) {","        self.body = ChatRequestBody(","            model: model,","            messages: messages,","            stream: stream","        )","    }","}"],"syntax":"swift"},{"anchor":"Usage-with-Client","text":"Usage with Client","type":"heading","level":2},{"type":"codeListing","code":["let request = StreamableChatRequest(","    messages: [.user(\"Tell me a story\")],","    model: \"gpt-4\"",")","","for try await chunk in client.stream(request) {","    if let content = chunk.choices.first?.delta.content {","        print(content, terminator: \"\")","    }","}"],"syntax":"swift"}]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse"],"anchor":"Associated-Types"}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"sections":[],"variants":[{"paths":["\/documentation\/openaikit\/streamablerequest"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest"},"abstract":[{"type":"text","text":"A protocol for requests that support server-sent events (SSE) streaming."}],"seeAlsoSections":[{"title":"Advanced Features","generated":true,"identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue"],"anchor":"Advanced-Features"}],"metadata":{"externalID":"s:9OpenAIKit17StreamableRequestP","symbolKind":"protocol","modules":[{"name":"OpenAIKit"}],"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"StreamableRequest"}],"role":"symbol","title":"StreamableRequest"},"references":{"doc://OpenAIKit/documentation/OpenAIKit/Request":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol that defines the structure of an API request."}],"title":"Request","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","url":"\/documentation\/openaikit\/request","kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest/StreamResponse":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamResponse"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"kind":"symbol","title":"StreamResponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse","type":"topic","role":"symbol","abstract":[{"text":"The type of each streamed response chunk.","type":"text"}],"required":true,"url":"\/documentation\/openaikit\/streamablerequest\/streamresponse"},"doc://OpenAIKit/documentation/OpenAIKit/JSONValue":{"navigatorTitle":[{"kind":"identifier","text":"JSONValue"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONValue"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue","kind":"symbol","abstract":[{"type":"text","text":"A type-safe representation of arbitrary JSON values."}],"type":"topic","title":"JSONValue","role":"symbol","url":"\/documentation\/openaikit\/jsonvalue"},"doc://OpenAIKit/documentation/OpenAIKit":{"abstract":[{"type":"text","text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms."}],"type":"topic","role":"collection","title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","kind":"symbol","url":"\/documentation\/openaikit"},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest":{"abstract":[{"type":"text","text":"A protocol for requests that support server-sent events (SSE) streaming."}],"type":"topic","navigatorTitle":[{"text":"StreamableRequest","kind":"identifier"}],"role":"symbol","title":"StreamableRequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest","kind":"symbol","url":"\/documentation\/openaikit\/streamablerequest","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/UploadRequest":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UploadRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"UploadRequest","kind":"identifier"}],"abstract":[{"text":"A protocol for requests that upload files using multipart\/form-data encoding.","type":"text"}],"title":"UploadRequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest","url":"\/documentation\/openaikit\/uploadrequest","kind":"symbol","type":"topic"},"doc://OpenAIKit/s8SendableP":{"identifier":"doc:\/\/OpenAIKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}