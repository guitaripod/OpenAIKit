{"sections":[],"metadata":{"externalID":"s:9OpenAIKit14EncodingFormatO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodingFormat","kind":"identifier"}],"modules":[{"name":"OpenAIKit"}],"role":"symbol","navigatorTitle":[{"text":"EncodingFormat","kind":"identifier"}],"title":"EncodingFormat","roleHeading":"Enumeration","symbolKind":"enum"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/openaikit\/encodingformat"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/base64","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/float"],"generated":true,"title":"Enumeration Cases"},{"anchor":"Initializers","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/init(rawValue:)"],"generated":true,"title":"Initializers"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/Equatable-Implementations","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations"}],"abstract":[{"text":"The format for returning embedding vectors.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/OpenAIKit\/Se","doc:\/\/OpenAIKit\/SE","doc:\/\/OpenAIKit\/SQ","doc:\/\/OpenAIKit\/SH","doc:\/\/OpenAIKit\/SY","doc:\/\/OpenAIKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodingFormat"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Embeddings can be returned in different formats to optimize for various use cases"},{"type":"text","text":" "},{"type":"text","text":"and network transfer efficiency."}]},{"anchor":"Cases","type":"heading","level":2,"text":"Cases"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"float","type":"codeVoice"},{"text":": Returns embeddings as an array of floating-point numbers (default)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"base64"},{"type":"text","text":": Returns embeddings as a base64-encoded string"}]}]}],"type":"unorderedList"},{"anchor":"Usage-Considerations","type":"heading","level":2,"text":"Usage Considerations"},{"anchor":"Float-Format","type":"heading","level":3,"text":"Float Format"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"float"},{"type":"text","text":" format when:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You need to immediately process or analyze the embeddings","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You’re performing calculations like cosine similarity","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Storage size is not a primary concern"}]}]}],"type":"unorderedList"},{"anchor":"Base64-Format","type":"heading","level":3,"text":"Base64 Format"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"code":"base64","type":"codeVoice"},{"text":" format when:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"You’re transferring large amounts of embedding data","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You want to reduce response payload size (approximately 30% smaller)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You’re storing embeddings directly without processing"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"code":["\/\/ For immediate processing","let request = EmbeddingRequest(","    input: \"Sample text\",","    model: \"text-embedding-3-small\",","    encodingFormat: .float",")","","\/\/ For efficient transfer","let request = EmbeddingRequest(","    input: Array(repeating: \"Text\", count: 1000),","    model: \"text-embedding-3-small\",","    encodingFormat: .base64",")"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","references":{"doc://OpenAIKit/s8SendableP":{"identifier":"doc:\/\/OpenAIKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat":{"abstract":[{"text":"The format for returning embedding vectors.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodingFormat"}],"role":"symbol","title":"EncodingFormat","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat","kind":"symbol","url":"\/documentation\/openaikit\/encodingformat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodingFormat"}]},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat/Equatable-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/Equatable-Implementations","title":"Equatable Implementations","kind":"article","url":"\/documentation\/openaikit\/encodingformat\/equatable-implementations"},"doc://OpenAIKit/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/OpenAIKit\/SQ"},"doc://OpenAIKit/documentation/OpenAIKit":{"abstract":[{"type":"text","text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms."}],"type":"topic","role":"collection","title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","kind":"symbol","url":"\/documentation\/openaikit"},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat/float":{"abstract":[{"text":"Embeddings returned as an array of floating-point numbers.","type":"text"}],"type":"topic","role":"symbol","title":"EncodingFormat.float","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/float","kind":"symbol","url":"\/documentation\/openaikit\/encodingformat\/float","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"float","kind":"identifier"}]},"doc://OpenAIKit/SY":{"identifier":"doc:\/\/OpenAIKit\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://OpenAIKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/OpenAIKit\/SE"},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat/base64":{"abstract":[{"text":"Embeddings returned as a base64-encoded string for efficient transfer.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/base64","kind":"symbol","title":"EncodingFormat.base64","url":"\/documentation\/openaikit\/encodingformat\/base64","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"base64"}]},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat/init(rawValue:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/init(rawValue:)","type":"topic","abstract":[],"kind":"symbol","title":"init(rawValue:)","role":"symbol","url":"\/documentation\/openaikit\/encodingformat\/init(rawvalue:)"},"doc://OpenAIKit/Se":{"identifier":"doc:\/\/OpenAIKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://OpenAIKit/documentation/OpenAIKit/EncodingFormat/RawRepresentable-Implementations":{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EncodingFormat\/RawRepresentable-Implementations","kind":"article","abstract":[],"type":"topic","title":"RawRepresentable Implementations","role":"collectionGroup","url":"\/documentation\/openaikit\/encodingformat\/rawrepresentable-implementations"},"doc://OpenAIKit/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/OpenAIKit\/SH"}}}