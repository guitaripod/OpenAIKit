{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EmbeddingsEndpoint"},{"type":"text","text":" class enables you to convert text into high-dimensional"},{"type":"text","text":" "},{"type":"text","text":"vectors (embeddings) that capture semantic meaning. These embeddings can be used"},{"type":"text","text":" "},{"type":"text","text":"for various natural language processing tasks such as:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Semantic Search"}]},{"type":"text","text":": Find documents similar to a query"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clustering"}]},{"type":"text","text":": Group similar texts together"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Recommendations"}],"type":"strong"},{"type":"text","text":": Suggest related content"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Anomaly Detection"}]},{"type":"text","text":": Identify outliers in text data"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Classification"}],"type":"strong"},{"text":": Train machine learning models on text features","type":"text"}]}]}]},{"type":"heading","level":2,"text":"Understanding Embeddings","anchor":"Understanding-Embeddings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Embeddings are dense numerical representations of text where semantically similar"},{"type":"text","text":" "},{"type":"text","text":"texts have vectors that are close together in the high-dimensional space. The"},{"type":"text","text":" "},{"type":"text","text":"distance between vectors (typically measured using cosine similarity) indicates"},{"type":"text","text":" "},{"type":"text","text":"how related the texts are in meaning."}]},{"type":"heading","level":2,"text":"Available Models","anchor":"Available-Models"},{"type":"heading","level":3,"text":"text-embedding-3-small","anchor":"text-embedding-3-small"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Dimensions","type":"text"}]},{"text":": 1536 (can be reduced)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use Case"}],"type":"strong"},{"text":": General-purpose, cost-effective","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Performance"}]},{"type":"text","text":": Good balance of quality and speed"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"text-embedding-3-large","anchor":"text-embedding-3-large"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Dimensions","type":"text"}],"type":"strong"},{"type":"text","text":": 3072 (can be reduced)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Use Case","type":"text"}],"type":"strong"},{"text":": Higher accuracy requirements","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Performance"}]},{"type":"text","text":": Best quality, higher cost"}]}]}]},{"type":"heading","level":3,"text":"text-embedding-ada-002 (Legacy)","anchor":"text-embedding-ada-002-Legacy"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dimensions"}]},{"type":"text","text":": 1536 (fixed)"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Use Case","type":"text"}]},{"type":"text","text":": Backward compatibility only"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Note","type":"text"}]},{"type":"text","text":": Not recommended for new applications"}]}]}]},{"type":"heading","level":2,"text":"Basic Usage","anchor":"Basic-Usage"},{"code":["let client = OpenAIKit(apiKey: \"your-api-key\")","","\/\/ Single text embedding","let request = EmbeddingRequest(","    input: \"The history of artificial intelligence\",","    model: \"text-embedding-3-small\"",")","","let response = try await client.embeddings.create(request)","let embedding = response.data.first?.embedding"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Advanced Examples","anchor":"Advanced-Examples"},{"type":"heading","level":3,"text":"Semantic Search Implementation","anchor":"Semantic-Search-Implementation"},{"code":["\/\/ 1. Create embeddings for your documents","let documents = [","    \"Swift is a powerful programming language\",","    \"Python is popular for machine learning\",","    \"JavaScript runs in web browsers\"","]","","let docsRequest = EmbeddingRequest(","    input: documents,","    model: \"text-embedding-3-small\"",")","let docsResponse = try await client.embeddings.create(docsRequest)","","\/\/ 2. Create embedding for search query","let queryRequest = EmbeddingRequest(","    input: \"What language should I use for iOS development?\",","    model: \"text-embedding-3-small\"",")","let queryResponse = try await client.embeddings.create(queryRequest)","","\/\/ 3. Calculate similarities","if let queryVector = queryResponse.data.first?.embedding.floatValues {","    let similarities = docsResponse.data.map { doc in","        guard let docVector = doc.embedding.floatValues else { return 0.0 }","        return cosineSimilarity(queryVector, docVector)","    }","    ","    \/\/ Find most similar document","    if let maxIndex = similarities.enumerated().max(by: { $0.element < $1.element })?.offset {","        print(\"Most relevant: \\(documents[maxIndex])\")","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"text":"Dimension Reduction for Efficiency","anchor":"Dimension-Reduction-for-Efficiency"},{"code":["let request = EmbeddingRequest(","    input: \"Large corpus of text to embed\",","    model: \"text-embedding-3-small\",","    dimensions: 512  \/\/ Reduce from 1536 to 512",")","","\/\/ Smaller embeddings = faster similarity calculations and less storage","let response = try await client.embeddings.create(request)"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"text":"Batch Processing with Base64 Encoding","anchor":"Batch-Processing-with-Base64-Encoding"},{"code":["let batchRequest = EmbeddingRequest(","    input: Array(repeating: \"Sample text\", count: 100),","    model: \"text-embedding-3-small\",","    encodingFormat: .base64  \/\/ More efficient for large batches",")","","let response = try await client.embeddings.create(batchRequest)","\/\/ Store base64 strings directly in database"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Best Practices","anchor":"Best-Practices"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Batch Requests","type":"text"}],"type":"strong"},{"text":": Process multiple texts in a single request (up to 2048 inputs)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Cache Embeddings"}]},{"type":"text","text":": Store computed embeddings to avoid redundant API calls"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Normalize Vectors"}],"type":"strong"},{"type":"text","text":": For cosine similarity, pre-normalize vectors for faster calculations"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Choose Right Model","type":"text"}]},{"type":"text","text":": Use "},{"type":"codeVoice","code":"text-embedding-3-small"},{"type":"text","text":" for most use cases"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Consider Dimensions"}]},{"text":": Reduce dimensions when possible to save costs and improve speed","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"code":["do {","    let response = try await client.embeddings.create(request)","    \/\/ Process embeddings","} catch {","    if let apiError = error as? OpenAIError {","        switch apiError {","        case .rateLimitExceeded:","            \/\/ Implement backoff strategy","        case .invalidRequest(let message):","            print(\"Invalid request: \\(message)\")","        default:","            \/\/ Handle other errors","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","isActive":true,"type":"reference"},{"type":"text","text":", "},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true,"type":"reference"}],"type":"paragraph"}],"type":"aside","name":"See Also","style":"note"}]}],"metadata":{"role":"symbol","symbolKind":"class","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"modules":[{"name":"OpenAIKit"}],"externalID":"s:9OpenAIKit18EmbeddingsEndpointC","navigatorTitle":[{"text":"EmbeddingsEndpoint","kind":"identifier"}],"title":"EmbeddingsEndpoint"},"variants":[{"paths":["\/documentation\/openaikit\/embeddingsendpoint"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"],"anchor":"Instance-Methods","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Provides access to OpenAI’s embeddings API for converting text into numerical vectors."}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/OpenAIKit\/s8SendableP"],"type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"},"seeAlsoSections":[{"title":"Embeddings","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse"],"anchor":"Embeddings","generated":true}],"references":{"doc://OpenAIKit/documentation/OpenAIKit":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/openaikit","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint/create(_:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EmbeddingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"url":"\/documentation\/openaikit\/embeddingsendpoint\/create(_:)","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"title":"create(_:)","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"},"doc://OpenAIKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/OpenAIKit\/s8SendableP","type":"unresolvable"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingRequest":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingRequest"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingRequest"}],"url":"\/documentation\/openaikit\/embeddingrequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","role":"symbol","title":"EmbeddingRequest","type":"topic","abstract":[{"type":"text","text":"A request to create embeddings for the given input."}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingResponse":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingResponse"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingResponse"}],"url":"\/documentation\/openaikit\/embeddingresponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","role":"symbol","title":"EmbeddingResponse","type":"topic","abstract":[{"text":"The response from an embedding creation request.","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingsendpoint","abstract":[{"type":"text","text":"Provides access to OpenAI’s embeddings API for converting text into numerical vectors."}],"navigatorTitle":[{"text":"EmbeddingsEndpoint","kind":"identifier"}],"title":"EmbeddingsEndpoint","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"}}}