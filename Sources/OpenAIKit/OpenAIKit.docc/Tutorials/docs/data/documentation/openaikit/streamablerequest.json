{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/streamablerequest"]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"identifier":{"url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"StreamableRequest","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamableRequest"}],"symbolKind":"protocol","modules":[{"name":"OpenAIKit"}],"roleHeading":"Protocol","title":"StreamableRequest","externalID":"s:9OpenAIKit17StreamableRequestP","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:9OpenAIKit7RequestP","text":"Request","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"code":"StreamableRequest","type":"codeVoice"},{"type":"text","text":" extends the base "},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","isActive":true,"type":"reference"},{"type":"text","text":" protocol to support streaming responses"},{"type":"text","text":" "},{"type":"text","text":"from the OpenAI API. This is particularly useful for real-time applications where you want"},{"type":"text","text":" "},{"type":"text","text":"to process responses as they arrive rather than waiting for the complete response."}],"type":"paragraph"},{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"Streaming is supported by various OpenAI endpoints including:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Chat completions (for real-time chat responses)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Completions (for real-time text generation)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Assistants API (for real-time message streaming)"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"The streaming response is typically a modified version of the regular response,"},{"type":"text","text":" "},{"type":"text","text":"often containing delta objects instead of complete content."}],"type":"paragraph"},{"type":"heading","anchor":"Example-Implementation","level":2,"text":"Example Implementation"},{"syntax":"swift","type":"codeListing","code":["struct StreamableChatRequest: StreamableRequest {","    typealias Body = ChatRequestBody","    typealias Response = ChatCompletionResponse","    typealias StreamResponse = ChatCompletionChunk","    ","    let path = \"\/v1\/chat\/completions\"","    let body: ChatRequestBody?","    ","    init(messages: [ChatMessage], model: String, stream: Bool = true) {","        self.body = ChatRequestBody(","            model: model,","            messages: messages,","            stream: stream","        )","    }","}"]},{"type":"heading","anchor":"Usage-with-Client","level":2,"text":"Usage with Client"},{"syntax":"swift","type":"codeListing","code":["let request = StreamableChatRequest(","    messages: [.user(\"Tell me a story\")],","    model: \"gpt-4\"",")","","for try await chunk in client.stream(request) {","    if let content = chunk.choices.first?.delta.content {","        print(content, terminator: \"\")","    }","}"]}],"kind":"content"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse"],"anchor":"Associated-Types"}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/s8SendableP"],"kind":"relationships"}],"abstract":[{"text":"A protocol for requests that support server-sent events (SSE) streaming.","type":"text"}],"seeAlsoSections":[{"title":"Advanced Features","generated":true,"identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue"],"anchor":"Advanced-Features"}],"references":{"doc://OpenAIKit/documentation/OpenAIKit/Request":{"url":"\/documentation\/openaikit\/request","abstract":[{"type":"text","text":"A protocol that defines the structure of an API request."}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","title":"Request","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request"},"doc://OpenAIKit/documentation/OpenAIKit":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/openaikit","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit"},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamableRequest"}],"title":"StreamableRequest","type":"topic","url":"\/documentation\/openaikit\/streamablerequest","navigatorTitle":[{"kind":"identifier","text":"StreamableRequest"}],"role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest","abstract":[{"type":"text","text":"A protocol for requests that support server-sent events (SSE) streaming."}],"kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest/StreamResponse":{"kind":"symbol","type":"topic","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamResponse"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"url":"\/documentation\/openaikit\/streamablerequest\/streamresponse","abstract":[{"type":"text","text":"The type of each streamed response chunk."}],"title":"StreamResponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse"},"doc://OpenAIKit/documentation/OpenAIKit/JSONValue":{"title":"JSONValue","type":"topic","navigatorTitle":[{"text":"JSONValue","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONValue","kind":"identifier"}],"url":"\/documentation\/openaikit\/jsonvalue","kind":"symbol","abstract":[{"type":"text","text":"A type-safe representation of arbitrary JSON values."}]},"doc://OpenAIKit/documentation/OpenAIKit/UploadRequest":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UploadRequest"}],"url":"\/documentation\/openaikit\/uploadrequest","abstract":[{"type":"text","text":"A protocol for requests that upload files using multipart\/form-data encoding."}],"navigatorTitle":[{"kind":"identifier","text":"UploadRequest"}],"title":"UploadRequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest"},"doc://OpenAIKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/OpenAIKit\/s8SendableP","title":"Swift.Sendable"}}}