{"variants":[{"paths":["\/documentation\/openaikit\/audioformat\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Initializer","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"OpenAIKit"}],"title":"init(from:)","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:9OpenAIKit11AudioFormatO","extendedModule":"Swift","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioFormat"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioFormat\/init(from:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}],"type":"paragraph"}]}],"abstract":[{"text":"Creates a new instance by decoding from the given decoder, when the","type":"text"},{"text":" ","type":"text"},{"text":"type’s ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://OpenAIKit/documentation/OpenAIKit/AudioFormat":{"title":"AudioFormat","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AudioFormat"}],"role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioFormat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AudioFormat"}],"url":"\/documentation\/openaikit\/audioformat","kind":"symbol","abstract":[{"text":"Supported audio formats for speech generation and transcription.","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/AudioFormat/init(from:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/openaikit\/audioformat\/init(from:)","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioFormat\/init(from:)","role":"symbol","title":"init(from:)","type":"topic","abstract":[{"text":"Creates a new instance by decoding from the given decoder, when the","type":"text"},{"text":" ","type":"text"},{"text":"type’s ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/openaikit","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit"}}}