{"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Installation","anchor":"Installation","type":"heading"},{"level":3,"text":"Swift Package Manager","anchor":"Swift-Package-Manager","type":"heading"},{"inlineContent":[{"type":"text","text":"OpenAIKit can be easily integrated into your project using Swift Package Manager."}],"type":"paragraph"},{"level":4,"text":"Xcode","anchor":"Xcode","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"In Xcode, select ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"File"}]},{"text":" → ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Add Package Dependencies"}]}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Enter the repository URL: ","type":"text"},{"code":"https:\/\/github.com\/yourusername\/OpenAIKit.git","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Select the version rule and click ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Add Package"}]}]}]}],"type":"orderedList"},{"level":4,"text":"Package.swift","anchor":"Packageswift","type":"heading"},{"inlineContent":[{"text":"Add OpenAIKit to your ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":" file:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"MyApp\",","    platforms: [","        .iOS(.v15),","        .macOS(.v12)","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/marcusziade\/OpenAIKit.git\", from: \"1.0.0\")","    ],","    targets: [","        .target(","            name: \"MyApp\",","            dependencies: [\"OpenAIKit\"]","        )","    ]",")"],"type":"codeListing"},{"level":2,"text":"Authentication","anchor":"Authentication","type":"heading"},{"level":3,"text":"Obtaining an API Key","anchor":"Obtaining-an-API-Key","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Sign up or log in at ","type":"text"},{"type":"reference","identifier":"https:\/\/platform.openai.com","isActive":true}]}]},{"content":[{"inlineContent":[{"text":"Navigate to ","type":"text"},{"inlineContent":[{"type":"text","text":"API Keys"}],"type":"strong"},{"text":" in your account settings","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Click ","type":"text"},{"inlineContent":[{"text":"Create new secret key","type":"text"}],"type":"strong"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Copy and securely store your API key","type":"text"}]}]}],"type":"orderedList"},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Never commit API keys to source control. Use environment variables or secure storage."}]}],"type":"aside"},{"level":3,"text":"Initializing the Client","anchor":"Initializing-the-Client","type":"heading"},{"syntax":"swift","code":["import OpenAIKit","","\/\/ Basic initialization","let openAI = OpenAIKit(apiKey: \"your-api-key\")","","\/\/ With organization","let openAI = OpenAIKit(","    apiKey: \"your-api-key\",","    organization: \"org-id\"",")","","\/\/ With custom configuration","let config = Configuration(","    apiKey: \"your-api-key\",","    baseURL: URL(string: \"https:\/\/custom-proxy.com\")!,","    timeoutInterval: 120",")","let openAI = OpenAIKit(configuration: config)"],"type":"codeListing"},{"level":2,"text":"Your First Request","anchor":"Your-First-Request","type":"heading"},{"level":3,"text":"Chat Completion","anchor":"Chat-Completion","type":"heading"},{"inlineContent":[{"type":"text","text":"The most common use case is generating text with chat completions:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Simple conversation","let response = try await openAI.chat.completions(","    ChatCompletionRequest(","        messages: [","            ChatMessage(role: .user, content: \"Hello, how are you?\")","        ],","        model: \"gpt-4o-mini\"","    )",")","","print(response.choices.first?.message.content ?? \"\")"],"type":"codeListing"},{"level":3,"text":"Streaming Responses","anchor":"Streaming-Responses","type":"heading"},{"inlineContent":[{"type":"text","text":"For real-time output, use streaming:"}],"type":"paragraph"},{"syntax":"swift","code":["let request = ChatCompletionRequest(","    messages: [","        ChatMessage(role: .user, content: \"Write a short story about a robot.\")","    ],","    model: \"gpt-4o\",","    stream: true",")","","for try await chunk in openAI.chat.completionsStream(request) {","    if let content = chunk.choices.first?.delta.content {","        print(content, terminator: \"\")","    }","}"],"type":"codeListing"},{"level":2,"text":"Common Use Cases","anchor":"Common-Use-Cases","type":"heading"},{"level":3,"text":"Text Generation","anchor":"Text-Generation","type":"heading"},{"syntax":"swift","code":["let response = try await openAI.chat.completions(","    ChatCompletionRequest(","        messages: [","            ChatMessage(","                role: .system,","                content: \"You are a creative writing assistant.\"","            ),","            ChatMessage(","                role: .user,","                content: \"Write a haiku about programming.\"","            )","        ],","        model: \"gpt-4o\",","        temperature: 0.8","    )",")"],"type":"codeListing"},{"level":3,"text":"Code Generation","anchor":"Code-Generation","type":"heading"},{"syntax":"swift","code":["let response = try await openAI.chat.completions(","    ChatCompletionRequest(","        messages: [","            ChatMessage(","                role: .system,","                content: \"You are a Swift programming expert.\"","            ),","            ChatMessage(","                role: .user,","                content: \"Write a function to validate email addresses.\"","            )","        ],","        model: \"gpt-4o\",","        temperature: 0.2","    )",")"],"type":"codeListing"},{"level":3,"text":"Image Generation","anchor":"Image-Generation","type":"heading"},{"syntax":"swift","code":["let imageResponse = try await openAI.images.generations(","    ImageGenerationRequest(","        prompt: \"A futuristic city at sunset, digital art style\",","        model: \"dall-e-3\",","        size: \"1024x1024\",","        quality: \"hd\"","    )",")","","if let imageURL = imageResponse.data.first?.url {","    \/\/ Download and display the image","}"],"type":"codeListing"},{"level":3,"text":"Audio Transcription","anchor":"Audio-Transcription","type":"heading"},{"syntax":"swift","code":["let audioData = try Data(contentsOf: audioFileURL)","","let transcription = try await openAI.audio.transcriptions(","    TranscriptionRequest(","        file: audioData,","        fileName: \"recording.mp3\",","        model: \"whisper-1\"","    )",")","","print(transcription.text)"],"type":"codeListing"},{"level":3,"text":"Text Embeddings","anchor":"Text-Embeddings","type":"heading"},{"syntax":"swift","code":["let embedding = try await openAI.embeddings.create(","    EmbeddingRequest(","        input: \"OpenAI provides powerful AI models.\",","        model: \"text-embedding-3-small\"","    )",")","","let vector = embedding.data.first?.embedding.floatValues ?? []"],"type":"codeListing"},{"level":2,"text":"Error Handling","anchor":"Error-Handling","type":"heading"},{"inlineContent":[{"text":"Always handle potential errors:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["do {","    let response = try await openAI.chat.completions(request)","    \/\/ Handle success","} catch let error as OpenAIError {","    switch error {","    case .authenticationFailed:","        print(\"Check your API key\")","    case .rateLimitExceeded:","        print(\"Too many requests, please wait\")","    case .apiError(let apiError):","        print(\"API Error: \\(apiError.error.message)\")","    default:","        print(\"Error: \\(error.localizedDescription)\")","    }","} catch {","    print(\"Unexpected error: \\(error)\")","}"],"type":"codeListing"},{"level":2,"text":"Best Practices","anchor":"Best-Practices","type":"heading"},{"level":3,"text":"API Key Security","anchor":"API-Key-Security","type":"heading"},{"syntax":"swift","code":["\/\/ ❌ Don't hardcode API keys","let openAI = OpenAIKit(apiKey: \"sk-abc123...\")","","\/\/ ✅ Use environment variables","if let apiKey = ProcessInfo.processInfo.environment[\"OPENAI_API_KEY\"] {","    let openAI = OpenAIKit(apiKey: apiKey)","}","","\/\/ ✅ Or use secure storage (iOS\/macOS)","let keychain = Keychain(service: \"com.myapp.openai\")","if let apiKey = keychain[\"api_key\"] {","    let openAI = OpenAIKit(apiKey: apiKey)","}"],"type":"codeListing"},{"level":3,"text":"Rate Limiting","anchor":"Rate-Limiting","type":"heading"},{"inlineContent":[{"text":"Implement exponential backoff for rate limits:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func makeRequestWithRetry<T>(_ request: () async throws -> T) async throws -> T {","    var retries = 0","    let maxRetries = 3","    ","    while retries < maxRetries {","        do {","            return try await request()","        } catch OpenAIError.rateLimitExceeded {","            retries += 1","            let delay = pow(2.0, Double(retries))","            try await Task.sleep(nanoseconds: UInt64(delay * 1_000_000_000))","        }","    }","    ","    return try await request()","}"],"type":"codeListing"},{"level":3,"text":"Token Management","anchor":"Token-Management","type":"heading"},{"inlineContent":[{"type":"text","text":"Monitor token usage to control costs:"}],"type":"paragraph"},{"syntax":"swift","code":["let response = try await openAI.chat.completions(request)","","if let usage = response.usage {","    print(\"Prompt tokens: \\(usage.promptTokens)\")","    print(\"Completion tokens: \\(usage.completionTokens)\")","    print(\"Total tokens: \\(usage.totalTokens)\")","}"],"type":"codeListing"},{"level":2,"text":"Next Steps","anchor":"Next-Steps","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Explore the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ChatEndpoint"},{"text":" for advanced chat features","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Learn about ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Function","type":"reference"},{"text":" calling for structured outputs","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Try "},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioEndpoint","type":"reference","isActive":true},{"type":"text","text":" for speech synthesis and transcription"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generate images with "},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ImagesEndpoint","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"text":"Build semantic search with ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint","type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/gettingstarted"]}],"metadata":{"modules":[{"name":"OpenAIKit"}],"title":"Getting Started with OpenAIKit","role":"article","roleHeading":"Article"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/GettingStarted"},"sections":[],"kind":"article","abstract":[{"text":"Learn how to integrate OpenAIKit into your project and make your first API calls.","type":"text"}],"references":{"doc://OpenAIKit/documentation/OpenAIKit":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/openaikit","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit"},"https://platform.openai.com":{"identifier":"https:\/\/platform.openai.com","titleInlineContent":[{"type":"text","text":"platform.openai.com"}],"url":"https:\/\/platform.openai.com","type":"link","title":"platform.openai.com"},"doc://OpenAIKit/documentation/OpenAIKit/ChatEndpoint":{"url":"\/documentation\/openaikit\/chatendpoint","abstract":[{"type":"text","text":"An endpoint for interacting with OpenAI’s Chat Completions API."}],"navigatorTitle":[{"kind":"identifier","text":"ChatEndpoint"}],"type":"topic","title":"ChatEndpoint","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChatEndpoint"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ChatEndpoint"},"doc://OpenAIKit/documentation/OpenAIKit/AudioEndpoint":{"title":"AudioEndpoint","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AudioEndpoint"}],"role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/AudioEndpoint","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AudioEndpoint"}],"url":"\/documentation\/openaikit\/audioendpoint","kind":"symbol","abstract":[{"text":"Provides access to OpenAI’s audio-related API endpoints.","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/ImagesEndpoint":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ImagesEndpoint","kind":"identifier"}],"url":"\/documentation\/openaikit\/imagesendpoint","abstract":[{"text":"Provides access to OpenAI’s image generation, editing, and variation endpoints.","type":"text"}],"navigatorTitle":[{"text":"ImagesEndpoint","kind":"identifier"}],"title":"ImagesEndpoint","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ImagesEndpoint"},"doc://OpenAIKit/documentation/OpenAIKit/Function":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Function","kind":"identifier"}],"url":"\/documentation\/openaikit\/function","abstract":[{"type":"text","text":"A function that the model can call."}],"navigatorTitle":[{"text":"Function","kind":"identifier"}],"title":"Function","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Function"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingsendpoint","abstract":[{"type":"text","text":"Provides access to OpenAI’s embeddings API for converting text into numerical vectors."}],"navigatorTitle":[{"text":"EmbeddingsEndpoint","kind":"identifier"}],"title":"EmbeddingsEndpoint","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"}}}