{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"request","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV","text":"EmbeddingRequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV","text":"EmbeddingResponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"text":"The embedding request containing input text(s) and configuration.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true},{"type":"text","text":" containing the generated embeddings and usage information."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method converts text into numerical vector representations that capture"},{"type":"text","text":" "},{"type":"text","text":"semantic meaning. The resulting embeddings can be used for similarity comparisons,"},{"type":"text","text":" "},{"type":"text","text":"search, clustering, and other NLP tasks."}]},{"content":[{"inlineContent":[{"type":"text","text":"An error if the request fails, including network errors or API errors."}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"},{"type":"heading","level":2,"text":"Example Usage","anchor":"Example-Usage"},{"type":"heading","level":3,"text":"Simple Embedding","anchor":"Simple-Embedding"},{"code":["let request = EmbeddingRequest(","    input: \"What is machine learning?\",","    model: \"text-embedding-3-small\"",")","","let response = try await embeddings.create(request)","if let vector = response.data.first?.embedding.floatValues {","    print(\"Embedding has \\(vector.count) dimensions\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"text":"Batch Processing","anchor":"Batch-Processing"},{"code":["let texts = [","    \"First document about AI\",","    \"Second document about ML\",","    \"Third document about deep learning\"","]","","let request = EmbeddingRequest(","    input: texts,","    model: \"text-embedding-3-small\",","    dimensions: 256  \/\/ Reduce dimensions",")","","let response = try await embeddings.create(request)","for (index, embedding) in response.data.enumerated() {","    print(\"Document \\(index): \\(texts[embedding.index])\")","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Common Use Cases","anchor":"Common-Use-Cases"},{"type":"heading","level":3,"text":"Building a Semantic Search System","anchor":"Building-a-Semantic-Search-System"},{"code":["\/\/ 1. Embed and store your documents","struct Document {","    let id: String","    let content: String","    let embedding: [Double]","}","","var documents: [Document] = []","","for (id, content) in contentDatabase {","    let request = EmbeddingRequest(input: content, model: \"text-embedding-3-small\")","    let response = try await embeddings.create(request)","    ","    if let vector = response.data.first?.embedding.floatValues {","        documents.append(Document(id: id, content: content, embedding: vector))","    }","}","","\/\/ 2. Search by embedding similarity","func search(query: String) async throws -> [Document] {","    let queryRequest = EmbeddingRequest(input: query, model: \"text-embedding-3-small\")","    let queryResponse = try await embeddings.create(queryRequest)","    ","    guard let queryVector = queryResponse.data.first?.embedding.floatValues else {","        return []","    }","    ","    \/\/ Calculate similarities and sort","    let results = documents.map { doc in","        (doc, cosineSimilarity(queryVector, doc.embedding))","    }","    .sorted { $0.1 > $1.1 }","    .prefix(10)","    .map { $0.0 }","    ","    return Array(results)","}"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":"The API has rate limits. Implement appropriate retry logic"},{"type":"text","text":" "},{"type":"text","text":"and respect rate limit headers in production applications."}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","isActive":true,"type":"reference"}],"type":"paragraph"}],"name":"See Also","type":"aside","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"]]},"variants":[{"paths":["\/documentation\/openaikit\/embeddingsendpoint\/create(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","title":"create(_:)","roleHeading":"Instance Method","modules":[{"name":"OpenAIKit"}],"externalID":"s:9OpenAIKit18EmbeddingsEndpointC6createyAA17EmbeddingResponseVAA0F7RequestVYaKF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EmbeddingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"},"sections":[],"kind":"symbol","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"references":{"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingRequest":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingRequest"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingRequest"}],"url":"\/documentation\/openaikit\/embeddingrequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","role":"symbol","title":"EmbeddingRequest","type":"topic","abstract":[{"type":"text","text":"A request to create embeddings for the given input."}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingResponse":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingResponse"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingResponse"}],"url":"\/documentation\/openaikit\/embeddingresponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","role":"symbol","title":"EmbeddingResponse","type":"topic","abstract":[{"text":"The response from an embedding creation request.","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingVector":{"navigatorTitle":[{"text":"EmbeddingVector","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingVector","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingvector","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","role":"symbol","title":"EmbeddingVector","type":"topic","abstract":[{"text":"Represents an embedding vector in either float or base64 format.","type":"text"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingsendpoint","abstract":[{"type":"text","text":"Provides access to OpenAIâ€™s embeddings API for converting text into numerical vectors."}],"navigatorTitle":[{"text":"EmbeddingsEndpoint","kind":"identifier"}],"title":"EmbeddingsEndpoint","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"},"doc://OpenAIKit/documentation/OpenAIKit":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/openaikit","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"title":"OpenAIKit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint/create(_:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EmbeddingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"url":"\/documentation\/openaikit\/embeddingsendpoint\/create(_:)","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"title":"create(_:)","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"}}}