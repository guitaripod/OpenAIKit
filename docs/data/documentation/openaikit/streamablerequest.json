{"seeAlsoSections":[{"generated":true,"anchor":"Advanced-Features","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue"],"title":"Advanced Features"}],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StreamableRequest"}],"modules":[{"name":"OpenAIKit"}],"navigatorTitle":[{"text":"StreamableRequest","kind":"identifier"}],"role":"symbol","title":"StreamableRequest","externalID":"s:9OpenAIKit17StreamableRequestP"},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","doc:\/\/OpenAIKit\/s8SendableP"],"kind":"relationships"}],"abstract":[{"text":"A protocol for requests that support server-sent events (SSE) streaming.","type":"text"}],"identifier":{"url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","preciseIdentifier":"s:9OpenAIKit7RequestP","text":"Request","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"code":"StreamableRequest","type":"codeVoice"},{"type":"text","text":" extends the base "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","isActive":true},{"type":"text","text":" protocol to support streaming responses"},{"type":"text","text":" "},{"type":"text","text":"from the OpenAI API. This is particularly useful for real-time applications where you want"},{"type":"text","text":" "},{"type":"text","text":"to process responses as they arrive rather than waiting for the complete response."}]},{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Streaming is supported by various OpenAI endpoints including:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Chat completions (for real-time chat responses)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Completions (for real-time text generation)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Assistants API (for real-time message streaming)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The streaming response is typically a modified version of the regular response,","type":"text"},{"text":" ","type":"text"},{"text":"often containing delta objects instead of complete content.","type":"text"}]},{"level":2,"type":"heading","text":"Example Implementation","anchor":"Example-Implementation"},{"code":["struct StreamableChatRequest: StreamableRequest {","    typealias Body = ChatRequestBody","    typealias Response = ChatCompletionResponse","    typealias StreamResponse = ChatCompletionChunk","    ","    let path = \"\/v1\/chat\/completions\"","    let body: ChatRequestBody?","    ","    init(messages: [ChatMessage], model: String, stream: Bool = true) {","        self.body = ChatRequestBody(","            model: model,","            messages: messages,","            stream: stream","        )","    }","}"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","text":"Usage with Client","anchor":"Usage-with-Client"},{"code":["let request = StreamableChatRequest(","    messages: [.user(\"Tell me a story\")],","    model: \"gpt-4\"",")","","for try await chunk in client.stream(request) {","    if let content = chunk.choices.first?.delta.content {","        print(content, terminator: \"\")","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/openaikit\/streamablerequest"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse"],"title":"Associated Types"}],"sections":[],"kind":"symbol","references":{"doc://OpenAIKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/OpenAIKit\/s8SendableP"},"doc://OpenAIKit/documentation/OpenAIKit":{"url":"\/documentation\/openaikit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","title":"OpenAIKit","role":"collection","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/Request":{"type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/Request","role":"symbol","title":"Request","abstract":[{"text":"A protocol that defines the structure of an API request.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"url":"\/documentation\/openaikit\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest":{"navigatorTitle":[{"text":"StreamableRequest","kind":"identifier"}],"title":"StreamableRequest","abstract":[{"type":"text","text":"A protocol for requests that support server-sent events (SSE) streaming."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest","url":"\/documentation\/openaikit\/streamablerequest","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamableRequest","kind":"identifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/UploadRequest":{"url":"\/documentation\/openaikit\/uploadrequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/UploadRequest","title":"UploadRequest","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UploadRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol for requests that upload files using multipart\/form-data encoding."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"UploadRequest","kind":"identifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/JSONValue":{"url":"\/documentation\/openaikit\/jsonvalue","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/JSONValue","title":"JSONValue","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONValue"}],"abstract":[{"type":"text","text":"A type-safe representation of arbitrary JSON values."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONValue"}]},"doc://OpenAIKit/documentation/OpenAIKit/StreamableRequest/StreamResponse":{"title":"StreamResponse","abstract":[{"type":"text","text":"The type of each streamed response chunk."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/StreamableRequest\/StreamResponse","required":true,"url":"\/documentation\/openaikit\/streamablerequest\/streamresponse","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StreamResponse","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}}}