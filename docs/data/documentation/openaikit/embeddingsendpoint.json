{"seeAlsoSections":[{"anchor":"Embeddings","generated":true,"title":"Embeddings","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse"]}],"metadata":{"symbolKind":"class","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"modules":[{"name":"OpenAIKit"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddingsEndpoint"}],"role":"symbol","externalID":"s:9OpenAIKit18EmbeddingsEndpointC","title":"EmbeddingsEndpoint"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/OpenAIKit\/s8SendableP"]}],"abstract":[{"type":"text","text":"Provides access to OpenAIâ€™s embeddings API for converting text into numerical vectors."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EmbeddingsEndpoint"},{"type":"text","text":" class enables you to convert text into high-dimensional"},{"type":"text","text":" "},{"type":"text","text":"vectors (embeddings) that capture semantic meaning. These embeddings can be used"},{"type":"text","text":" "},{"type":"text","text":"for various natural language processing tasks such as:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Semantic Search"}]},{"text":": Find documents similar to a query","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clustering"}]},{"text":": Group similar texts together","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Recommendations"}]},{"type":"text","text":": Suggest related content"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Anomaly Detection"}]},{"type":"text","text":": Identify outliers in text data"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Classification"}],"type":"strong"},{"text":": Train machine learning models on text features","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Understanding Embeddings","anchor":"Understanding-Embeddings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Embeddings are dense numerical representations of text where semantically similar"},{"type":"text","text":" "},{"type":"text","text":"texts have vectors that are close together in the high-dimensional space. The"},{"type":"text","text":" "},{"type":"text","text":"distance between vectors (typically measured using cosine similarity) indicates"},{"type":"text","text":" "},{"type":"text","text":"how related the texts are in meaning."}]},{"type":"heading","level":2,"text":"Available Models","anchor":"Available-Models"},{"type":"heading","level":3,"text":"text-embedding-3-small","anchor":"text-embedding-3-small"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dimensions"}]},{"type":"text","text":": 1536 (can be reduced)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Use Case"}]},{"type":"text","text":": General-purpose, cost-effective"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Performance"}],"type":"strong"},{"text":": Good balance of quality and speed","type":"text"}]}]}]},{"type":"heading","level":3,"text":"text-embedding-3-large","anchor":"text-embedding-3-large"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Dimensions","type":"text"}]},{"type":"text","text":": 3072 (can be reduced)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Use Case","type":"text"}],"type":"strong"},{"text":": Higher accuracy requirements","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Performance","type":"text"}]},{"type":"text","text":": Best quality, higher cost"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"text-embedding-ada-002 (Legacy)","anchor":"text-embedding-ada-002-Legacy"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dimensions"}]},{"type":"text","text":": 1536 (fixed)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Use Case","type":"text"}]},{"type":"text","text":": Backward compatibility only"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Note"}],"type":"strong"},{"type":"text","text":": Not recommended for new applications"}]}]}]},{"type":"heading","level":2,"text":"Basic Usage","anchor":"Basic-Usage"},{"type":"codeListing","syntax":"swift","code":["let client = OpenAIKit(apiKey: \"your-api-key\")","","\/\/ Single text embedding","let request = EmbeddingRequest(","    input: \"The history of artificial intelligence\",","    model: \"text-embedding-3-small\"",")","","let response = try await client.embeddings.create(request)","let embedding = response.data.first?.embedding"]},{"type":"heading","level":2,"text":"Advanced Examples","anchor":"Advanced-Examples"},{"type":"heading","level":3,"text":"Semantic Search Implementation","anchor":"Semantic-Search-Implementation"},{"type":"codeListing","syntax":"swift","code":["\/\/ 1. Create embeddings for your documents","let documents = [","    \"Swift is a powerful programming language\",","    \"Python is popular for machine learning\",","    \"JavaScript runs in web browsers\"","]","","let docsRequest = EmbeddingRequest(","    input: documents,","    model: \"text-embedding-3-small\"",")","let docsResponse = try await client.embeddings.create(docsRequest)","","\/\/ 2. Create embedding for search query","let queryRequest = EmbeddingRequest(","    input: \"What language should I use for iOS development?\",","    model: \"text-embedding-3-small\"",")","let queryResponse = try await client.embeddings.create(queryRequest)","","\/\/ 3. Calculate similarities","if let queryVector = queryResponse.data.first?.embedding.floatValues {","    let similarities = docsResponse.data.map { doc in","        guard let docVector = doc.embedding.floatValues else { return 0.0 }","        return cosineSimilarity(queryVector, docVector)","    }","    ","    \/\/ Find most similar document","    if let maxIndex = similarities.enumerated().max(by: { $0.element < $1.element })?.offset {","        print(\"Most relevant: \\(documents[maxIndex])\")","    }","}"]},{"type":"heading","level":3,"text":"Dimension Reduction for Efficiency","anchor":"Dimension-Reduction-for-Efficiency"},{"type":"codeListing","syntax":"swift","code":["let request = EmbeddingRequest(","    input: \"Large corpus of text to embed\",","    model: \"text-embedding-3-small\",","    dimensions: 512  \/\/ Reduce from 1536 to 512",")","","\/\/ Smaller embeddings = faster similarity calculations and less storage","let response = try await client.embeddings.create(request)"]},{"type":"heading","level":3,"text":"Batch Processing with Base64 Encoding","anchor":"Batch-Processing-with-Base64-Encoding"},{"type":"codeListing","syntax":"swift","code":["let batchRequest = EmbeddingRequest(","    input: Array(repeating: \"Sample text\", count: 100),","    model: \"text-embedding-3-small\",","    encodingFormat: .base64  \/\/ More efficient for large batches",")","","let response = try await client.embeddings.create(batchRequest)","\/\/ Store base64 strings directly in database"]},{"type":"heading","level":2,"text":"Best Practices","anchor":"Best-Practices"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Batch Requests","type":"text"}]},{"type":"text","text":": Process multiple texts in a single request (up to 2048 inputs)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Cache Embeddings"}],"type":"strong"},{"text":": Store computed embeddings to avoid redundant API calls","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Normalize Vectors","type":"text"}]},{"type":"text","text":": For cosine similarity, pre-normalize vectors for faster calculations"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Choose Right Model"}]},{"type":"text","text":": Use "},{"code":"text-embedding-3-small","type":"codeVoice"},{"type":"text","text":" for most use cases"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Consider Dimensions"}]},{"type":"text","text":": Reduce dimensions when possible to save costs and improve speed"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"type":"codeListing","syntax":"swift","code":["do {","    let response = try await client.embeddings.create(request)","    \/\/ Process embeddings","} catch {","    if let apiError = error as? OpenAIError {","        switch apiError {","        case .rateLimitExceeded:","            \/\/ Implement backoff strategy","        case .invalidRequest(let message):","            print(\"Invalid request: \\(message)\")","        default:","            \/\/ Handle other errors","        }","    }","}"]},{"style":"note","type":"aside","name":"See Also","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/embeddingsendpoint"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"]}],"sections":[],"kind":"symbol","references":{"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint/create(_:)":{"type":"topic","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EmbeddingRequest","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)","role":"symbol","url":"\/documentation\/openaikit\/embeddingsendpoint\/create(_:)","title":"create(_:)","kind":"symbol"},"doc://OpenAIKit/s8SendableP":{"identifier":"doc:\/\/OpenAIKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingsEndpoint"}],"title":"EmbeddingsEndpoint","abstract":[{"type":"text","text":"Provides access to OpenAIâ€™s embeddings API for converting text into numerical vectors."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint","url":"\/documentation\/openaikit\/embeddingsendpoint","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingsEndpoint"}]},"doc://OpenAIKit/documentation/OpenAIKit":{"url":"\/documentation\/openaikit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","title":"OpenAIKit","role":"collection","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingResponse":{"navigatorTitle":[{"text":"EmbeddingResponse","kind":"identifier"}],"title":"EmbeddingResponse","abstract":[{"text":"The response from an embedding creation request.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","url":"\/documentation\/openaikit\/embeddingresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingResponse","kind":"identifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingRequest":{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","type":"topic","role":"symbol","title":"EmbeddingRequest","abstract":[{"type":"text","text":"A request to create embeddings for the given input."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingRequest","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingrequest","navigatorTitle":[{"text":"EmbeddingRequest","kind":"identifier"}],"kind":"symbol"}}}