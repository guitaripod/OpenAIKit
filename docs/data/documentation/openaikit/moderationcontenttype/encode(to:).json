{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Encodes this value into the given encoder, when the type’s "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"is "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"OpenAIKit"}],"symbolKind":"method","extendedModule":"Swift","externalID":"s:SYsSERzSS8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:9OpenAIKit21ModerationContentTypeO","role":"symbol","title":"encode(to:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ModerationContentType"]]},"identifier":{"url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ModerationContentType\/encode(to:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/moderationcontenttype\/encode(to:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"encoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The encoder to write data to.","type":"text"}]}],"name":"encoder"}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This function throws an error if any values are invalid for the given"},{"type":"text","text":" "},{"type":"text","text":"encoder’s format."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://OpenAIKit/documentation/OpenAIKit":{"kind":"symbol","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","role":"collection","title":"OpenAIKit","url":"\/documentation\/openaikit","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/ModerationContentType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModerationContentType"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ModerationContentType","title":"ModerationContentType","url":"\/documentation\/openaikit\/moderationcontenttype","navigatorTitle":[{"kind":"identifier","text":"ModerationContentType"}],"role":"symbol","abstract":[{"type":"text","text":"The type of content in a moderation request."}],"type":"topic","kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/ModerationContentType/encode(to:)":{"title":"encode(to:)","type":"topic","kind":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/ModerationContentType\/encode(to:)","url":"\/documentation\/openaikit\/moderationcontenttype\/encode(to:)","abstract":[{"text":"Encodes this value into the given encoder, when the type’s ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}