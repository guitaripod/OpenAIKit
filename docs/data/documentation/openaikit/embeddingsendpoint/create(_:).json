{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"request","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","text":"EmbeddingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","text":"EmbeddingResponse","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The embedding request containing input text(s) and configuration.","type":"text"}]}],"name":"request"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse"},{"type":"text","text":" containing the generated embeddings and usage information."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method converts text into numerical vector representations that capture"},{"type":"text","text":" "},{"type":"text","text":"semantic meaning. The resulting embeddings can be used for similarity comparisons,"},{"type":"text","text":" "},{"type":"text","text":"search, clustering, and other NLP tasks."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"An error if the request fails, including network errors or API errors.","type":"text"}]}],"style":"note","name":"Throws"},{"type":"heading","text":"Example Usage","anchor":"Example-Usage","level":2},{"type":"heading","text":"Simple Embedding","anchor":"Simple-Embedding","level":3},{"type":"codeListing","syntax":"swift","code":["let request = EmbeddingRequest(","    input: \"What is machine learning?\",","    model: \"text-embedding-3-small\"",")","","let response = try await embeddings.create(request)","if let vector = response.data.first?.embedding.floatValues {","    print(\"Embedding has \\(vector.count) dimensions\")","}"]},{"type":"heading","text":"Batch Processing","anchor":"Batch-Processing","level":3},{"type":"codeListing","syntax":"swift","code":["let texts = [","    \"First document about AI\",","    \"Second document about ML\",","    \"Third document about deep learning\"","]","","let request = EmbeddingRequest(","    input: texts,","    model: \"text-embedding-3-small\",","    dimensions: 256  \/\/ Reduce dimensions",")","","let response = try await embeddings.create(request)","for (index, embedding) in response.data.enumerated() {","    print(\"Document \\(index): \\(texts[embedding.index])\")","}"]},{"type":"heading","text":"Common Use Cases","anchor":"Common-Use-Cases","level":2},{"type":"heading","text":"Building a Semantic Search System","anchor":"Building-a-Semantic-Search-System","level":3},{"type":"codeListing","syntax":"swift","code":["\/\/ 1. Embed and store your documents","struct Document {","    let id: String","    let content: String","    let embedding: [Double]","}","","var documents: [Document] = []","","for (id, content) in contentDatabase {","    let request = EmbeddingRequest(input: content, model: \"text-embedding-3-small\")","    let response = try await embeddings.create(request)","    ","    if let vector = response.data.first?.embedding.floatValues {","        documents.append(Document(id: id, content: content, embedding: vector))","    }","}","","\/\/ 2. Search by embedding similarity","func search(query: String) async throws -> [Document] {","    let queryRequest = EmbeddingRequest(input: query, model: \"text-embedding-3-small\")","    let queryResponse = try await embeddings.create(queryRequest)","    ","    guard let queryVector = queryResponse.data.first?.embedding.floatValues else {","        return []","    }","    ","    \/\/ Calculate similarities and sort","    let results = documents.map { doc in","        (doc, cosineSimilarity(queryVector, doc.embedding))","    }","    .sorted { $0.1 > $1.1 }","    .prefix(10)","    .map { $0.0 }","    ","    return Array(results)","}"]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The API has rate limits. Implement appropriate retry logic","type":"text"},{"text":" ","type":"text"},{"text":"and respect rate limit headers in production applications.","type":"text"}]}],"style":"important","name":"Important"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","isActive":true}],"type":"paragraph"}],"style":"note","name":"See Also"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/embeddingsendpoint\/create(_:)"]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EmbeddingRequest","kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV","kind":"typeIdentifier"}],"roleHeading":"Instance Method","title":"create(_:)","externalID":"s:9OpenAIKit18EmbeddingsEndpointC6createyAA17EmbeddingResponseVAA0F7RequestVYaKF","role":"symbol","modules":[{"name":"OpenAIKit"}],"symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"]]},"abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"kind":"symbol","references":{"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingsEndpoint","kind":"identifier"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint","url":"\/documentation\/openaikit\/embeddingsendpoint","title":"EmbeddingsEndpoint","navigatorTitle":[{"text":"EmbeddingsEndpoint","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"Provides access to OpenAIâ€™s embeddings API for converting text into numerical vectors.","type":"text"}],"kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingRequest":{"navigatorTitle":[{"text":"EmbeddingRequest","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A request to create embeddings for the given input."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingRequest","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingrequest","title":"EmbeddingRequest","role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingResponse":{"title":"EmbeddingResponse","navigatorTitle":[{"kind":"identifier","text":"EmbeddingResponse"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","kind":"symbol","url":"\/documentation\/openaikit\/embeddingresponse","abstract":[{"type":"text","text":"The response from an embedding creation request."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingResponse"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint/create(_:)":{"title":"create(_:)","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"kind":"symbol","url":"\/documentation\/openaikit\/embeddingsendpoint\/create(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV","text":"EmbeddingRequest","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV","kind":"typeIdentifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingVector":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingVector"}],"type":"topic","abstract":[{"text":"Represents an embedding vector in either float or base64 format.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingVector"}],"url":"\/documentation\/openaikit\/embeddingvector","title":"EmbeddingVector","role":"symbol","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit":{"kind":"symbol","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","role":"collection","title":"OpenAIKit","url":"\/documentation\/openaikit","type":"topic"}}}