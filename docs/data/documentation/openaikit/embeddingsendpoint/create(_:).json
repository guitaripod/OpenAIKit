{"abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openaikit\/embeddingsendpoint\/create(_:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)","interfaceLanguage":"swift"},"metadata":{"title":"create(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EmbeddingRequest","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"modules":[{"name":"OpenAIKit"}],"symbolKind":"method","externalID":"s:9OpenAIKit18EmbeddingsEndpointC6createyAA17EmbeddingResponseVAA0F7RequestVYaKF","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/OpenAIKit\/documentation\/OpenAIKit","doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV","text":"EmbeddingRequest","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV","text":"EmbeddingResponse","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The embedding request containing input text(s) and configuration.","type":"text"}],"type":"paragraph"}],"name":"request"}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","type":"reference","isActive":true},{"text":" containing the generated embeddings and usage information.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method converts text into numerical vector representations that capture","type":"text"},{"text":" ","type":"text"},{"text":"semantic meaning. The resulting embeddings can be used for similarity comparisons,","type":"text"},{"text":" ","type":"text"},{"text":"search, clustering, and other NLP tasks.","type":"text"}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the request fails, including network errors or API errors."}]}],"name":"Throws"},{"type":"heading","level":2,"text":"Example Usage","anchor":"Example-Usage"},{"type":"heading","level":3,"text":"Simple Embedding","anchor":"Simple-Embedding"},{"type":"codeListing","syntax":"swift","code":["let request = EmbeddingRequest(","    input: \"What is machine learning?\",","    model: \"text-embedding-3-small\"",")","","let response = try await embeddings.create(request)","if let vector = response.data.first?.embedding.floatValues {","    print(\"Embedding has \\(vector.count) dimensions\")","}"]},{"type":"heading","level":3,"text":"Batch Processing","anchor":"Batch-Processing"},{"type":"codeListing","syntax":"swift","code":["let texts = [","    \"First document about AI\",","    \"Second document about ML\",","    \"Third document about deep learning\"","]","","let request = EmbeddingRequest(","    input: texts,","    model: \"text-embedding-3-small\",","    dimensions: 256  \/\/ Reduce dimensions",")","","let response = try await embeddings.create(request)","for (index, embedding) in response.data.enumerated() {","    print(\"Document \\(index): \\(texts[embedding.index])\")","}"]},{"type":"heading","level":2,"text":"Common Use Cases","anchor":"Common-Use-Cases"},{"type":"heading","level":3,"text":"Building a Semantic Search System","anchor":"Building-a-Semantic-Search-System"},{"type":"codeListing","syntax":"swift","code":["\/\/ 1. Embed and store your documents","struct Document {","    let id: String","    let content: String","    let embedding: [Double]","}","","var documents: [Document] = []","","for (id, content) in contentDatabase {","    let request = EmbeddingRequest(input: content, model: \"text-embedding-3-small\")","    let response = try await embeddings.create(request)","    ","    if let vector = response.data.first?.embedding.floatValues {","        documents.append(Document(id: id, content: content, embedding: vector))","    }","}","","\/\/ 2. Search by embedding similarity","func search(query: String) async throws -> [Document] {","    let queryRequest = EmbeddingRequest(input: query, model: \"text-embedding-3-small\")","    let queryResponse = try await embeddings.create(queryRequest)","    ","    guard let queryVector = queryResponse.data.first?.embedding.floatValues else {","        return []","    }","    ","    \/\/ Calculate similarities and sort","    let results = documents.map { doc in","        (doc, cosineSimilarity(queryVector, doc.embedding))","    }","    .sorted { $0.1 > $1.1 }","    .prefix(10)","    .map { $0.0 }","    ","    return Array(results)","}"]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"The API has rate limits. Implement appropriate retry logic","type":"text"},{"text":" ","type":"text"},{"text":"and respect rate limit headers in production applications.","type":"text"}]}],"name":"Important"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","isActive":true}]}],"name":"See Also"}]}],"references":{"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingResponse":{"navigatorTitle":[{"text":"EmbeddingResponse","kind":"identifier"}],"title":"EmbeddingResponse","abstract":[{"text":"The response from an embedding creation request.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingResponse","url":"\/documentation\/openaikit\/embeddingresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingResponse","kind":"identifier"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint/create(_:)":{"type":"topic","abstract":[{"text":"Creates embeddings for the given input text(s).","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EmbeddingRequest","preciseIdentifier":"s:9OpenAIKit16EmbeddingRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddingResponse","preciseIdentifier":"s:9OpenAIKit17EmbeddingResponseV"}],"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint\/create(_:)","role":"symbol","url":"\/documentation\/openaikit\/embeddingsendpoint\/create(_:)","title":"create(_:)","kind":"symbol"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingsEndpoint":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingsEndpoint"}],"title":"EmbeddingsEndpoint","abstract":[{"type":"text","text":"Provides access to OpenAIâ€™s embeddings API for converting text into numerical vectors."}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingsEndpoint","url":"\/documentation\/openaikit\/embeddingsendpoint","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingsEndpoint"}]},"doc://OpenAIKit/documentation/OpenAIKit":{"url":"\/documentation\/openaikit","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit","title":"OpenAIKit","role":"collection","abstract":[{"text":"A powerful, type-safe Swift SDK for the OpenAI API with support for all major endpoints and platforms.","type":"text"}],"kind":"symbol","type":"topic"},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingVector":{"navigatorTitle":[{"kind":"identifier","text":"EmbeddingVector"}],"title":"EmbeddingVector","abstract":[{"text":"Represents an embedding vector in either float or base64 format.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingVector","url":"\/documentation\/openaikit\/embeddingvector","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddingVector"}]},"doc://OpenAIKit/documentation/OpenAIKit/EmbeddingRequest":{"identifier":"doc:\/\/OpenAIKit\/documentation\/OpenAIKit\/EmbeddingRequest","type":"topic","role":"symbol","title":"EmbeddingRequest","abstract":[{"type":"text","text":"A request to create embeddings for the given input."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddingRequest","kind":"identifier"}],"url":"\/documentation\/openaikit\/embeddingrequest","navigatorTitle":[{"text":"EmbeddingRequest","kind":"identifier"}],"kind":"symbol"}}}